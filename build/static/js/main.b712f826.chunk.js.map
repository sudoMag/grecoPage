{"version":3,"sources":["components/Image.js","media/screenshots.svg","components/TextTypes.js","components/Button/styles.js","components/Button/index.js","pages/Home.js","pages/404.js","media/greco logo.svg","media/github logo.svg","services/getScrollPosition.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SvgImg","styled","img","styleKeys","ExternalLink","a","LinkedImg","imgSrc","href","src","DescriptionH1","h1","DescriptionH2","h2","StyledButton","div","color","moreStyles","Button","contentText","DownloadButton","Header","header","LeftContent","DownloadBox","RightContent","Home","className","ScreenShotsSvg","NotFoundErrorPage","scrollPosition","axisX","axisY","callbackList","Bar","nav","PageTitle","span","Navbar","callback","useState","setScrollPosition","fxSwitch","setFxSwitch","length","GrecoLogoSvg","GitHubLogoSvg","GeneralStyles","createGlobalStyle","props","theme","MainContainer","App","id","index","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StyleVariables","ReactDOM","render","document","getElementById","window","onscroll","scrollX","scrollY","forEach","callbackFn"],"mappings":"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","file":"static/js/main.b712f826.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SvgImg = styled.img`\r\n  ${({ styleKeys }) => {\r\n    return `${styleKeys}`;\r\n  }}\r\n`;\r\n\r\nconst ExternalLink = styled.a`\r\n  ${({ styleKeys }) => {\r\n    return `${styleKeys}`;\r\n  }}\r\n`;\r\n\r\nexport const LinkedImg = ({ imgSrc, styleKeys }) => {\r\n  return (\r\n    <ExternalLink\r\n      href=\"*\"\r\n      styleKeys={`${styleKeys}`}\r\n\t\t>\r\n      <SvgImg src={imgSrc} />\r\n    </ExternalLink>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/screenshots.a7ec9d39.svg\";","import styled from \"styled-components\";\r\n\r\nexport const DescriptionH1 = styled.h1`\r\n  font-size: 3.5em;\r\n  margin: 0.5em 0;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const DescriptionH2 = styled.h2`\r\n  font-weight: normal;\r\n  margin: 0;\r\n`;","import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.div`\r\n  padding: 0.6em 2em;\r\n  border-radius: 30px;\r\n  line-height: 1;\r\n  background-color: ${({ color }) => color};\r\n  background-color: black;\r\n  font-size: 1.1em;\r\n  cursor: pointer;\r\n  color: white;\r\n  ${({ moreStyles }) => moreStyles};\r\n`;\r\n\r\nexport default StyledButton;","import StyledButton from \"./styles\";\r\n\r\nconst Button = ({ color, moreStyles, contentText }) => {\r\n  return (\r\n    <StyledButton color={color} moreStyles={moreStyles}>\r\n      {contentText}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport const DownloadButton = ({ color, moreStyles }) => {\r\n  return (\r\n    <Button \r\n\t\t\tcolor={color} \r\n\t\t\tmoreStyles={moreStyles} \r\n\t\t\tcontentText=\"Descargar\" \r\n\t\t/>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport { SvgImg } from \"../components/Image\";\r\nimport ScreenShotsSvg from \"../media/screenshots.svg\";\r\nimport { DescriptionH1, DescriptionH2 } from \"../components/TextTypes\";\r\nimport { DownloadButton } from \"../components/Button\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst LeftContent = styled.div`\r\n  width: 40vw;\r\n  margin: 2em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst DownloadBox = styled.div`\r\n  margin: 2em 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst RightContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Header className=\"header mobile-change orientation reverse\">\r\n      <LeftContent className=\"mobile-change all-screen-width\">\r\n        <DescriptionH1>\r\n          Varias Definiciones Para Todas Tus Consultas\r\n        </DescriptionH1>\r\n        <DescriptionH2>\r\n          Con esta App puedes consultar palabras técnicas de tu área profesional\r\n          y obtener varias perspectivas para utilizar.\r\n        </DescriptionH2>\r\n        <DownloadBox>\r\n          <DownloadButton>Descargar</DownloadButton>\r\n        </DownloadBox>\r\n      </LeftContent>\r\n      <RightContent\r\n        className=\"\r\n          mobile-change\r\n          all-screen-width \r\n          navbar-space-padding\r\n        \"\r\n      >\r\n        <SvgImg\r\n          src={ScreenShotsSvg}\r\n          styleKeys={`\r\n          width: 50vw;\r\n          margin: auto;\r\n          `}\r\n          className=\"mobile-change all-screen-width\"\r\n        />\r\n      </RightContent>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const NotFoundErrorPage = () => {\r\n  return <h1>Page Not Found :C</h1>;\r\n};\r\n\r\nexport default NotFoundErrorPage;\r\n","export default __webpack_public_path__ + \"static/media/greco logo.27fa31cd.svg\";","export default __webpack_public_path__ + \"static/media/github logo.c4a2280d.svg\";","var scrollPosition = {\r\n  axisX: 0,\r\n  axisY: 0,\r\n};\r\n\r\nvar callbackList = [];\r\n\r\nexport const updateScrollPosition = (axisX, axisY) => {\r\n  scrollPosition = {\r\n    axisX: axisX,\r\n    axisY: axisY,\r\n  };\r\n  callbackList.forEach((callbackFn) => {\r\n    callbackFn(scrollPosition);\r\n  });\r\n};\r\n\r\nexport const addScrollFx = (callback) => {\r\n  callbackList[callbackList.length] = callback;\r\n};\r\n","import styled from \"styled-components\";\r\nimport GrecoLogoSvg from \"../media/greco logo.svg\";\r\nimport GitHubLogoSvg from \"../media/github logo.svg\";\r\nimport { SvgImg, LinkedImg } from \"./Image\";\r\nimport { addScrollFx } from \"../services/getScrollPosition\";\r\nimport { useState } from \"react\";\r\n\r\nconst Bar = styled.nav`\r\n  width: 100vw;\r\n  height: 60px;\r\n  //background-color: gray;\r\n  display: flex;\r\n  position: fixed;\r\n  backdrop-filter: blur(px);\r\n  ${({ scrollPosition }) => {\r\n    //console.log((scrollPosition[1] / 0.74) * 0.3 ,\"px\");\r\n    return `backdrop-filter: blur(${(scrollPosition[1] / 0.74) * 0.3}px);`;\r\n  }};\r\n`;\r\n\r\nconst PageTitle = styled.span`\r\n  margin: auto auto auto 2vw;\r\n  line-height: 1;\r\n  width: 10vw;\r\n  text-align: start;\r\n  color: black;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const [scrollPosition, setScrollPosition] = useState([0, 0]);\r\n  const [fxSwitch, setFxSwitch] = useState(true);\r\n\r\n  if (fxSwitch === true) {\r\n    addScrollFx((scrollPosition) => {\r\n      setScrollPosition([scrollPosition.axisX, scrollPosition.axisY]);\r\n    });\r\n    setFxSwitch(false);\r\n  }\r\n\r\n  return (\r\n    <Bar scrollPosition={scrollPosition}>\r\n      <PageTitle>GRECO</PageTitle>\r\n      <SvgImg\r\n        src={GrecoLogoSvg}\r\n        styleKeys={`\r\n            margin: auto;\r\n          `}\r\n      />\r\n      <LinkedImg\r\n        imgSrc={GitHubLogoSvg}\r\n        styleKeys={`\r\n            margin: auto 2vw auto auto;\r\n            width: 10vw;\r\n            display: flex;\r\n            justify-content: flex-end;\r\n          `}\r\n      />\r\n    </Bar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","//import { useEffect, useState } from 'react';\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport NotFoundErrorPage from \"./pages/404\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst GeneralStyles = createGlobalStyle`\r\n  ${(props) => {\r\n    if (props.theme === \"light\") {\r\n      return `\r\n        html {\r\n          --font-color: #585858;\r\n          --font-color-2: gray;\r\n          --font-color-ngtv: #b3b3b3;\r\n          --bg-color-1: white;\r\n          --bg-color-2: #ffffff;\r\n          --bg-color-3: #e0e0e0;\r\n          --bg-color-4: #e2e2e2;\r\n          --bg-color-5: #edeff3;\r\n          --bg-color-6: #d0d0d0;\r\n        }\r\n        `;\r\n    }\r\n  }}\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .mobile-change {\r\n      &.orientation {\r\n        flex-direction: column;\r\n        \r\n        &.reverse {\r\n          flex-direction: column-reverse;\r\n        }\r\n      }\r\n\r\n      &.all-screen-width {\r\n        width: 80vw;\r\n        margin: auto;\r\n      }\r\n\r\n      &.navbar-space-padding {\r\n        padding-top: 60px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: var(--bg-color-1);\r\n`;\r\n\r\nconst App = () => {\r\n  //const [ theme, setThemeColors ] = useState('light');\r\n  const theme = \"light\";\r\n  return (\r\n    <MainContainer id=\"App\">\r\n      <GeneralStyles theme={theme} />\r\n      <Navbar/>\r\n      <Router>\r\n        <Routes>\r\n          <Route index path=\"/\" element={<Home/>} />\r\n          <Route path=\"/*\" element={<NotFoundErrorPage />} />\r\n        </Routes>\r\n      </Router>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { updateScrollPosition } from \"./services/getScrollPosition\";\r\n\r\nconst StyleVariables = createGlobalStyle`\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n  \r\n  body {\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <StyleVariables />\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nwindow.onscroll = () => updateScrollPosition(window.scrollX, window.scrollY);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}